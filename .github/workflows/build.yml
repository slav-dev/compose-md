name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:

jobs:

  gradleValidation:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

  checks:
    name: Run Checks
    needs: gradleValidation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4.7.0
        with:
          distribution: zulu
          java-version: 17
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest --continue --stacktrace
      - name: Publish Test Report
        if: ${{ always() }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: "Unit Test Results"
          files: '**/build/test-results/**/*.xml'
      - name: Run Detekt
        if: ${{ always() }}
        run: ./gradlew detekt --stacktrace
      - name: Generate Detekt Annotations
        if: ${{ always() }}
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          path: '**/detekt.xml'
      - name: Run Lint
        if: ${{ always() }}
        run: ./gradlew lint --stacktrace
      - name: Generate Lint Annotations
        if: ${{ always() }}
        uses: yutailang0119/action-android-lint@v4
        with:
          report-path: '**/build/reports/lint-results-*.xml'

  assembleRelease:
    name: Assemble Library
    if: (github.event_name == 'pull_request')
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4.7.0
        with:
          distribution: zulu
          java-version: 17
      - name: Assemble Library
        run: ./gradlew assembleRelease --stacktrace

  publishSnapshot:
    name: Publish Snapshot
    if: (github.event_name != 'pull_request') && (github.ref == 'refs/heads/main')
    needs: gradleValidation
    runs-on: ubuntu-latest
    env:
      JRELEASER_NEXUS2_USERNAME: ${{ secrets.MAVENCENTRAL_USERNAME }}
      JRELEASER_NEXUS2_PASSWORD: ${{ secrets.MAVENCENTRAL_PASSWORD }}
      JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
      JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
      JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4.7.0
        with:
          distribution: zulu
          java-version: 17
      - name: Verify Configuration
        run: ./gradlew jreleaserConfig -PprojectVersionSuffix="SNAPSHOT" --stacktrace
      - name: Stage Artifacts
        run: ./gradlew clean publish -PprojectVersionSuffix="SNAPSHOT" --stacktrace
      - name: Publish Snapshots to Maven Central
        run: ./gradlew jreleaserFullRelease -PprojectVersionSuffix="SNAPSHOT" --stacktrace

  properties:
    name: Export Properties
    if: (github.event_name != 'pull_request')
    needs: gradleValidation
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4.2.1
        with:
          distribution: zulu
          java-version: 17
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=changelog::$CHANGELOG"

  releaseDraft:
    name: Draft New Release
    if: (github.event_name != 'pull_request') && (github.ref == 'refs/heads/main')
    needs: properties
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/{owner}/{repo}/releases \
            --jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' gh api -X DELETE repos/{owner}/{repo}/releases/{}
      - name: Create Release Draft
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.properties.outputs.version }}
          name: v${{ needs.properties.outputs.version }}
          body: ${{ needs.properties.outputs.changelog }}
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
